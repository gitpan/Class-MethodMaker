Revision history for Perl extension Class::MethodMaker.

1.00  Add ability to call new on instances as well as classes
        (Courtesy of Rafael Kitover).
      Add x_set method to list, hash_of_lists.
      Correction to -java flags for get_set (to use set_* rather than 
        set*, etc.)
      Install methods can now eval a string if seen.
      List methods may all be used as x_verb now (although the 
        pre-existing verb_x ones still exist for compatibility)
      Added x_index to list, hash_of_lists.

0.96  Fix pre-5.005_03 breakage.
      Undeprecate get_set->clear_x (keep it for consistency),
      since all other basic types have a clear_ method.
      Add in (experimental) copy method.

0.95  Fix bug in boolean that failed in inherited classes.
      Make get_set (undef) work.  Deprecate clear_x.
      -sugar reintroduced for backward compatibility only.
      Many more options to get_set.
      Added counter method.
      Made 5.004_04 compatible (I hope).
      Added hash x_clear method.
      Documented builtin class.
      Documented join addition to get_concat.
      Released 1.vi.00

0.94  Added static_get_set, and hashref arg handling to hash & 
      static_hash; all courtesy of Matthew Persico.  Slight cleaning.
      Added more ideas to `TODO' list.

0.93  Documentation update.  Various bug fixes.  Added object list
      (courtesy of Evolution Online Software).  Update get_concat to
      utilize a join field.  Remove some undocumented code.  Added
      tie_hash type.  Update tests, add in some for new types, remove
      tests for undocumented features.  Released March 2000.

0.92  Added regression tests, originally written to exercise 0.91 and
      then moved to a restructured MethodMaker.pm. One meta-method,
      fields() was abandoned, and replaced with a different meta_method,
      grouped_fields(), which adheres to the new calling structure.

0.91  Bundled up in a proper package, released to CPAN 26 November 1996

0.90  First stab -- released to CPAN without proper Makefile.PL or
      anything.

